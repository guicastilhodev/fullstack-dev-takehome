swagger: '2.0'
info:
  title: Quote Portal API
  description: API documentation for Quote Portal
  version: v1
host: localhost:8000
schemes:
- http
basePath: /api
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /crm/customers/:
    post:
      operationId: crm_customers_create
      description: Simulate CRM customer creation. Accepts customer data as JSON.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - name
          - email
          type: object
          properties:
            name:
              description: Customer name
              type: string
            email:
              description: Customer email
              type: string
      responses:
        '200':
          description: Customer received by CRM mock!
      tags:
      - crm
    parameters: []
  /crm/customers/list/:
    get:
      operationId: crm_customers_list_list
      description: List mock CRM customers.
      parameters: []
      responses:
        '200':
          description: List of customers
      tags:
      - crm
    parameters: []
  /erp/orders/:
    post:
      operationId: erp_orders_create
      description: Simulate ERP order creation. Accepts order data as JSON.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - customer
          - total
          - status
          type: object
          properties:
            customer:
              description: Customer name
              type: string
            total:
              description: Order total
              type: number
            status:
              description: Order status
              type: string
      responses:
        '200':
          description: Order received by ERP mock!
      tags:
      - erp
    parameters: []
  /erp/orders/list/:
    get:
      operationId: erp_orders_list_list
      description: List mock ERP orders.
      parameters: []
      responses:
        '200':
          description: List of orders
      tags:
      - erp
    parameters: []
  /login/:
    post:
      operationId: login_create
      summary: Login with username and password (session auth)
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        '200':
          description: Login successful
          schema:
            $ref: '#/definitions/Login'
        '401':
          description: Invalid credentials
      tags:
      - Auth
    parameters: []
  /logout/:
    post:
      operationId: logout_create
      summary: Logout (session auth)
      description: ''
      parameters: []
      responses:
        '200':
          description: Logout successful
      tags:
      - Auth
    parameters: []
  /quotes/:
    get:
      operationId: quotes_list
      summary: List all quotes
      description: Returns a list of all quotes submitted by the user (or all quotes
        if admin).
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Quote'
      tags:
      - Quotes
    post:
      operationId: quotes_create
      summary: Submit a new quote
      description: Submits a new quote for review. Returns the created quote object.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Quote'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Quote'
      tags:
      - Quotes
    parameters: []
  /quotes/{id}/:
    get:
      operationId: quotes_read
      summary: Retrieve a quote
      description: Retrieves the details of a specific quote by ID.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Quote'
      tags:
      - Quotes
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /quotes/{id}/set_status/:
    post:
      operationId: quotes_set_status
      summary: Set quote status
      description: 'Change the status of a quote. Only admins can perform this action.
        Status must be one of: Approved, Rejected, Converted, Converted to Order.'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - status
          type: object
          properties:
            status:
              description: New status for the quote
              type: string
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Quote'
        '400':
          description: Invalid status or missing requirements
      tags:
      - Quotes
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /register/:
    post:
      operationId: register_create
      summary: Register a new user
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserRegister'
      responses:
        '201':
          description: User created
          schema:
            $ref: '#/definitions/UserRegister'
        '400':
          description: Validation error
      tags:
      - Auth
    parameters: []
definitions:
  Login:
    required:
    - username
    - password
    type: object
    properties:
      username:
        title: Username
        type: string
        maxLength: 150
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
  Quote:
    required:
    - opportunity_id
    - customer_name
    - customer_email
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      opportunity_id:
        title: Opportunity id
        type: string
        maxLength: 100
        minLength: 1
      customer_name:
        title: Customer name
        type: string
        maxLength: 255
        minLength: 1
      customer_email:
        title: Customer email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      customer_company:
        title: Customer company
        type: string
        maxLength: 255
      supporting_document:
        title: Supporting document
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      submitted_by:
        title: Submitted by
        type: integer
        readOnly: true
      status:
        title: Status
        type: string
        enum:
        - Pending Review
        - Approved
        - Rejected
        - Converted
        readOnly: true
  UserRegister:
    required:
    - username
    - password
    type: object
    properties:
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
