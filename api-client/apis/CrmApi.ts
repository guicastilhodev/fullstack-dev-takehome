/* tslint:disable */
/* eslint-disable */
/**
 * Quote Portal API
 * API documentation for Quote Portal
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CrmCustomersCreateRequest,
} from '../models/index';
import {
    CrmCustomersCreateRequestFromJSON,
    CrmCustomersCreateRequestToJSON,
} from '../models/index';

export interface CrmCustomersCreateOperationRequest {
    data: CrmCustomersCreateRequest;
}

/**
 * 
 */
export class CrmApi extends runtime.BaseAPI {

    /**
     * Simulate CRM customer creation. Accepts customer data as JSON.
     */
    async crmCustomersCreateRaw(requestParameters: CrmCustomersCreateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['data'] == null) {
            throw new runtime.RequiredError(
                'data',
                'Required parameter "data" was null or undefined when calling crmCustomersCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }

        let urlPath = `/crm/customers/`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CrmCustomersCreateRequestToJSON(requestParameters['data']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Simulate CRM customer creation. Accepts customer data as JSON.
     */
    async crmCustomersCreate(requestParameters: CrmCustomersCreateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.crmCustomersCreateRaw(requestParameters, initOverrides);
    }

    /**
     * List mock CRM customers.
     */
    async crmCustomersListListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }

        let urlPath = `/crm/customers/list/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * List mock CRM customers.
     */
    async crmCustomersListList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.crmCustomersListListRaw(initOverrides);
    }

}
